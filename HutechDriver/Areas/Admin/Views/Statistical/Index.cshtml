@model PagedList.IPagedList<HutechDriver.Models.EF.Trip>
@using PagedList.Mvc;
@using HutechDriver.Models
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework;
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Thống kê</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Thống kê</li>
                </ol>
            </div>
        </div>
        <select id="driverSelect">
            <option value="">Chọn tài xế</option>
            @foreach (var driverName in ViewBag.DriverNames)
            {
                <option value="@driverName">@driverName</option>
            }
        </select>
        <button id="searchButton">Thống kê</button>
    </div><!-- /.container-fluid -->

</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <button id="error-trip" type="button" class="btn btn-sm btn-danger btnDelete">
                Reset
            </button>
            <button id="restore-all" type="button" class="btn btn-sm btn-success">
               Restore
            </button>


            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                    <i class="fas fa-minus"></i>
                </button>
                <button type="button" class="btn btn-tool" data-card-widget="remove" title="Remove">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-8">
                    <div class="chart">
                        <canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                    </div>
                </div>
                <div class="col-md-4">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Ngày</th>
                                <th>Doanh thu</th>
                                <th>Lợi nhuận</th>
                            </tr>
                        </thead>
                        <tbody id="load_data"></tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- /.card-body -->
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->
@section scripts{
    <script src="~/Content/clients/plugins/chart.js/Chart.min.js"></script>
    <script src="~/Content/clients/plugins/moment/moment.min.js"></script>
    <script>
        $(function () {
            /* ChartJS
             * -------
             * Here we will create a few charts using ChartJS
             */

            var arrDoanhThu = [];
            var arrLoiNhuan = [];
            var arrDate = [];
            const url = '@Url.Action("GetStatisticalDay","Statistical")';
            $.ajax({
                url: url,
                type: 'GET',
                data: { fromDate: '', toDate: '' },
                success: function (rs) {

                    $.each(rs.Data, function (i, item) {
                        var strDate = moment(item.Date).format('DD/MM/yyyy');
                        arrDate.push(strDate);
                        arrDoanhThu.push(item.DoanhThu);
                        arrLoiNhuan.push(item.LoiNhuan);
                    });
                    var areaChartData = {
                        labels: arrDate,
                        datasets: [
                            {
                                label: 'Lợi nhuận',
                                backgroundColor: 'rgba(60,141,188,0.9)',
                                borderColor: 'rgba(60,141,188,0.8)',
                                pointRadius: false,
                                pointColor: '#3b8bba',
                                pointStrokeColor: 'rgba(60,141,188,1)',
                                pointHighlightFill: '#fff',
                                pointHighlightStroke: 'rgba(60,141,188,1)',
                                data: arrLoiNhuan
                            },
                            {
                                label: 'Doanh thu',
                                backgroundColor: 'rgba(210, 214, 222, 1)',
                                borderColor: 'rgba(210, 214, 222, 1)',
                                pointRadius: false,
                                pointColor: 'rgba(210, 214, 222, 1)',
                                pointStrokeColor: '#c1c7d1',
                                pointHighlightFill: '#fff',
                                pointHighlightStroke: 'rgba(220,220,220,1)',
                                data: arrDoanhThu
                            },
                        ]
                    }
                    //-------------
                    //- BAR CHART -
                    //-------------
                    var barChartCanvas = $('#barChart').get(0).getContext('2d')
                    var barChartData = $.extend(true, {}, areaChartData)
                    var temp0 = areaChartData.datasets[0]
                    var temp1 = areaChartData.datasets[1]
                    barChartData.datasets[0] = temp1
                    barChartData.datasets[1] = temp0

                    var barChartOptions = {
                        responsive: true,
                        maintainAspectRatio: false,
                        datasetFill: false
                    }

                    new Chart(barChartCanvas, {
                        type: 'bar',
                        data: barChartData,
                        options: barChartOptions
                    });
                    load_data(rs.Data);
                }
            });


        })

        function load_data(data) {
            var strHtml = "";
            $.each(data, function (i, item) {
                var strDate = moment(item.Date).format('DD/MM/yyyy');
                strHtml += "<tr>";
                strHtml += "<td>" + (i + 1) + "</td>";
                strHtml += "<td>" + strDate + "</td>";
                strHtml += "<td>" + item.DoanhThu + "</td>";
                strHtml += "<td>" + item.LoiNhuan + "</td>";
                strHtml += "</tr>";
            });
            $('#load_data').html(strHtml);
        }

    </script>
    <script>
     $(function () {
    $('#error-trip').click(function () {
        // Show a confirmation dialog
        if (confirm("M có chắc là m muốn xóa hết thống kê chuyến đi ?")) {
            // User clicked OK, proceed with the deletion
            $.ajax({
                url: '@Url.Action("DeleteAllRecords", "Statistical")', // Replace with the actual URL
                type: 'POST',
                success: function (response) {
                    if (response.success) {
                        // Clear the content of the table body
                        $('#load_data').empty();
                    } else {
                        console.error(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    // Handle the error if needed
                    console.error(error);
                }
            });
        } else {
            // User clicked Cancel, do nothing
        }
    });

    // Other JavaScript code...
});



$(function () {
    // ... Your existing code ...

    // Add an event listener for the "Restore All" button
    $('#restore-all').click(function () {
        if (confirm("Bạn có chắc chắn muốn khôi phục tất cả dữ liệu?")) {
            $.ajax({
                url: '@Url.Action("RestoreAllRecords", "Statistical")', // Replace with the actual URL
                type: 'POST',
                success: function (response) {
                    if (response.success) {
                        // Refresh the table after successful restoration
                        refreshTable();
                    } else {
                        console.error(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    // Handle the error if needed
                    console.error(error);
                }
            });
        }
    });

    // Function to refresh the table
    function refreshTable() {
        // Perform an AJAX request to reload the table data
        $.ajax({
            url: '@Url.Action("GetStatisticalDay", "Statistical")', // Replace with the actual URL
            type: 'GET',
            success: function (rs) {
                // Reload the table with updated data
                load_data(rs.Data);
            }
        });
    }

    // ... Your other existing code ...
});




    </script>
    <script>
           $(document).ready(function () {
       const searchBtns = document.querySelectorAll('#searchButton');

       searchBtns.forEach(searchBtn => {
           searchBtn.addEventListener('click', function (event) {
               var employeeName = $("#employeeSearchInput").val();
               const url = '@Url.Action("SearchEmployeeDay", "Statistical")';
               var arrDoanhThu = [];
               var arrLoiNhuan = [];
               var arrMonthYear = [];
               $.ajax({
                   type: "POST",
                   url: url,
                   data: { name: employeeName },
                   success: function (data) {
                       $.each(data.Data, function (i, item) {
                           var strMonthYear = moment(item.Year + '-' + item.Month, 'YYYY-MM').format('MM/YYYY');
                           arrMonthYear.push(strMonthYear);
                           arrDoanhThu.push(item.DoanhThu);
                           arrLoiNhuan.push(item.LoiNhuan);
                       });

                       var areaChartData = {
                           labels: arrMonthYear,
                           datasets: [
                               {
                                   label: 'Lợi nhuận',
                                   backgroundColor: 'rgba(60,141,188,0.9)',
                                   borderColor: 'rgba(60,141,188,0.8)',
                                   pointRadius: false,
                                   pointColor: '#3b8bba',
                                   pointStrokeColor: 'rgba(60,141,188,1)',
                                   pointHighlightFill: '#fff',
                                   pointHighlightStroke: 'rgba(60,141,188,1)',
                                   data: arrLoiNhuan
                               },
                               {
                                   label: 'Doanh thu',
                                   backgroundColor: 'rgba(210, 214, 222, 1)',
                                   borderColor: 'rgba(210, 214, 222, 1)',
                                   pointRadius: false,
                                   pointColor: 'rgba(210, 214, 222, 1)',
                                   pointStrokeColor: '#c1c7d1',
                                   pointHighlightFill: '#fff',
                                   pointHighlightStroke: 'rgba(220,220,220,1)',
                                   data: arrDoanhThu
                               },
                           ]
                       };

                       var barChartCanvas = $('#barChart').get(0).getContext('2d');
                       if (window.myBar) {
                           window.myBar.destroy(); // Xóa biểu đồ cũ nếu có
                       }
                       window.myBar = new Chart(barChartCanvas, {
                           type: 'bar',
                           data: areaChartData,
                           options: {
                               responsive: true,
                               maintainAspectRatio: false,
                               datasetFill: false,
                               plugins: {
                                   datalabels: {
                                       anchor: 'end',
                                       align: 'top',
                                       formatter: function (value, context) {
                                           return value.toFixed(2);
                                       }
                                   }
                               },
                               scales: {
                                   x: {
                                       ticks: {
                                           callback: function (value, index, values) {
                                               return value;
                                           }
                                       }
                                   }
                               }
                           }
                       });

                       load_data(data.Data);
                   },
                   error: function (data) {
                       alert('Tìm không thành công!.');
                       location.reload(true);
                   }
               });
           });
       });
   });
    </script>
}
